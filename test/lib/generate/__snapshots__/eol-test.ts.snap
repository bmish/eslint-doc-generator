// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using crlf end of line from .editorconfig 1`] = `
"## Rules
<!-- begin auto-generated rules list -->

ðŸ’¼ Configurations enabled in.

| Name                 | ðŸ’¼                                     |
| :------------------- | :------------------------------------- |
| [a](docs/rules/a.md) | ![badge-a][] ![badge-B][] ![badge-c][] |
| [B](docs/rules/B.md) |                                        |
| [c](docs/rules/c.md) |                                        |

<!-- end auto-generated rules list -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using crlf end of line from .editorconfig 2`] = `
"# test/a

ðŸ’¼ This rule is enabled in the following configs: \`a\`, \`B\`, \`c\`.

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using crlf end of line from .editorconfig 3`] = `
"# test/B

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using crlf end of line from .editorconfig 4`] = `
"# test/c

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using lf end of line from .editorconfig 1`] = `
"## Rules
<!-- begin auto-generated rules list -->

ðŸ’¼ Configurations enabled in.

| Name                 | ðŸ’¼                                     |
| :------------------- | :------------------------------------- |
| [a](docs/rules/a.md) | ![badge-a][] ![badge-B][] ![badge-c][] |
| [B](docs/rules/B.md) |                                        |
| [c](docs/rules/c.md) |                                        |

<!-- end auto-generated rules list -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using lf end of line from .editorconfig 2`] = `
"# test/a

ðŸ’¼ This rule is enabled in the following configs: \`a\`, \`B\`, \`c\`.

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using lf end of line from .editorconfig 3`] = `
"# test/B

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using lf end of line from .editorconfig 4`] = `
"# test/c

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using the end of line from .editorconfig while respecting the .md specific end of line setting 1`] = `
"## Rules
<!-- begin auto-generated rules list -->

ðŸ’¼ Configurations enabled in.

| Name                 | ðŸ’¼                                     |
| :------------------- | :------------------------------------- |
| [a](docs/rules/a.md) | ![badge-a][] ![badge-B][] ![badge-c][] |
| [B](docs/rules/B.md) |                                        |
| [c](docs/rules/c.md) |                                        |

<!-- end auto-generated rules list -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using the end of line from .editorconfig while respecting the .md specific end of line setting 2`] = `
"# test/a

ðŸ’¼ This rule is enabled in the following configs: \`a\`, \`B\`, \`c\`.

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using the end of line from .editorconfig while respecting the .md specific end of line setting 3`] = `
"# test/B

<!-- end auto-generated rule header -->
"
`;

exports[`string (getEndOfLine) generates using the correct end of line when .editorconfig exists generates using the end of line from .editorconfig while respecting the .md specific end of line setting 4`] = `
"# test/c

<!-- end auto-generated rule header -->
"
`;
