// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generate (package.json) > Missing plugin package.json > throws an error 1`] = `[Error: Could not find package.json of ESLint plugin.]`;

exports[`generate (package.json) > Missing plugin package.json \`name\` field > throws an error 1`] = `[Error: Cannot find module '/Users/bryan/Development/oss/eslint-doc-generator/index.js' imported from '/Users/bryan/Development/oss/eslint-doc-generator/lib/import.ts']`;

exports[`generate (package.json) > No exported rules object found > throws an error 1`] = `[Error: Cannot find module '/Users/bryan/Development/oss/eslint-doc-generator/index.js' imported from '/Users/bryan/Development/oss/eslint-doc-generator/lib/import.ts']`;

exports[`generate (package.json) Missing plugin package.json \`name\` field throws an error 1`] = `"Could not find \`name\` field in ESLint plugin's package.json."`;

exports[`generate (package.json) Missing plugin package.json throws an error 1`] = `"Could not find package.json of ESLint plugin."`;

exports[`generate (package.json) No configs found omits the config column 1`] = `
"<!-- begin auto-generated rules list -->

| Name                           | Description   |
| :----------------------------- | :------------ |
| [no-foo](docs/rules/no-foo.md) | disallow foo. |

<!-- end auto-generated rules list -->"
`;

exports[`generate (package.json) No configs found omits the config column 2`] = `
"# Disallow foo (\`test/no-foo\`)

<!-- end auto-generated rule header -->
"
`;

exports[`generate (package.json) No exported rules object found throws an error 1`] = `"Could not find exported \`rules\` object in ESLint plugin."`;

exports[`generate (package.json) Scoped plugin name determines the correct plugin prefix 1`] = `
"# Disallow foo (\`@my-scope/no-foo\`)

ðŸ’¼ This rule is enabled in the âœ… \`recommended\` config.

<!-- end auto-generated rule header -->
"
`;

exports[`generate (package.json) Scoped plugin with custom plugin name determines the correct plugin prefix 1`] = `
"<!-- begin auto-generated rules list -->

ðŸ’¼ Configurations enabled in.\\
âœ… Set in the \`recommended\` configuration.

| Name                           | Description   | ðŸ’¼ |
| :----------------------------- | :------------ | :- |
| [no-foo](docs/rules/no-foo.md) | disallow foo. | âœ…  |

<!-- end auto-generated rules list -->"
`;

exports[`generate (package.json) Scoped plugin with custom plugin name determines the correct plugin prefix 2`] = `
"# Disallow foo (\`@my-scope/foo/no-foo\`)

ðŸ’¼ This rule is enabled in the âœ… \`recommended\` config.

<!-- end auto-generated rule header -->
"
`;

exports[`generate (package.json) plugin entry point in JSON format generates the documentation 1`] = `
"<!-- begin auto-generated rules list -->

ðŸ’¼ Configurations enabled in.\\
âœ… Set in the \`recommended\` configuration.

| Name                           | Description            | ðŸ’¼ |
| :----------------------------- | :--------------------- | :- |
| [no-foo](docs/rules/no-foo.md) | Description for no-foo | âœ…  |

<!-- end auto-generated rules list -->"
`;

exports[`generate (package.json) plugin entry point in JSON format generates the documentation 2`] = `
"# Description for no-foo (\`test/no-foo\`)

ðŸ’¼ This rule is enabled in the âœ… \`recommended\` config.

<!-- end auto-generated rule header -->
"
`;
